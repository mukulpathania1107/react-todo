{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","onChange","e","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","cur","filter","TodoList","filteredTodos","status","App","useState","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAqCeA,G,MAnCF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAiBtD,OACI,iCACI,uBAAOC,SAlBU,SAAAC,GACrBL,EAAaK,EAAEC,OAAOC,QAiBiBC,KAAK,OAAOD,MAAOR,EAAWU,UAAU,eAC3E,wBAAQC,QAfU,SAAAL,GACtBA,EAAEM,iBACEZ,IACAG,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEW,KAAMb,EAAWc,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAClEhB,EAAa,MAWuBQ,KAAK,SAASC,UAAU,cAA5D,SACI,mBAAGA,UAAU,yBAEjB,qBAAKA,UAAU,SAAf,SACI,yBAAQL,SAXQ,SAAAC,GACxBF,EAAUE,EAAEC,OAAOC,QAU4BU,KAAK,QAAQR,UAAU,cAA9D,UACI,wBAAQF,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,mC,OCALW,G,MA3BF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMlB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAczB,OACI,sBAAKO,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAkEM,EAAKP,OACvE,wBAAQF,QAZQ,WACpBR,EAASD,EAAMmB,KAAI,SAAAC,GACf,OAAIA,EAAIP,KAAOK,EAAKL,GACT,2BAAKO,GAAZ,IAAiBR,WAAYQ,EAAIR,YAE9BQ,OAO2BZ,UAAU,eAA5C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QAnBM,WAClBR,EAASD,EAAMqB,QAAO,SAAAD,GAAG,OAAIA,EAAIP,KAAOK,EAAKL,QAkBTL,UAAU,YAA1C,SACI,mBAAGA,UAAU,wBCRdc,G,MAZE,SAAC,GAAgD,IAA9CtB,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,SAAkBsB,GAAoB,EAA5BC,OAA4B,EAApBD,eACzC,OACI,qBAAKf,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACKe,EAAcJ,KAAI,SAAAD,GAAI,OACnB,cAAC,EAAD,CAAMlB,MAAOA,EAAOC,SAAUA,EAAUiB,KAAMA,GAAWA,EAAKL,aCiDnEY,MApDf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACN5B,EADM,KACKC,EADL,OAEa2B,mBAAS,IAFtB,mBAEN1B,EAFM,KAECC,EAFD,OAGeyB,mBAAS,OAHxB,mBAGNF,EAHM,KAGEtB,EAHF,OAI6BwB,mBAAS,IAJtC,mBAINH,EAJM,KAISI,EAJT,KAMbC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACRE,IACAC,MACC,CAACP,EAAQxB,IAEZ,IAAM+B,EAAiB,WACrBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUnC,KAGzC6B,EAAgB,WAChBG,aAAaI,QAAQ,SACvBnC,EAASiC,KAAKG,MAAML,aAAaI,QAAQ,WAEzCnC,EAAS,KAIP6B,EAAgB,WACpB,OAAQN,GACN,IAAK,YACHG,EAAiB3B,EAAMqB,QAAO,SAAAH,GAAI,OAAIA,EAAKN,cAC3C,MACF,IAAK,cACHe,EAAiB3B,EAAMqB,QAAO,SAAAH,GAAI,OAAKA,EAAKN,cAC5C,MACF,QACEe,EAAiB3B,KAKvB,OACE,sBAAKQ,UAAU,MAAf,UACE,iCACE,6CAEF,cAAC,EAAD,CAAMN,UAAWA,EAAWJ,UAAWA,EAAWC,aAAcA,EAAcC,MAAOA,EAAOC,SAAUA,IACtG,cAAC,EAAD,CAAUuB,OAAQA,EAAQD,cAAeA,EAAevB,MAAOA,EAAOC,SAAUA,QC/CtFqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a0f03b53.chunk.js","sourcesContent":["import './Form.css';\n\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\n    const inputTextHandler = e => {\n        setInputText(e.target.value);\n    };\n\n    const submitTodoHandler = e => {\n        e.preventDefault();\n        if (inputText) {\n            setTodos([...todos, { text: inputText, completed: false, id: Math.random() * 10000 }]);\n            setInputText('');\n        }\n    };\n\n    const statusChangeHandler = e => {\n        setStatus(e.target.value);\n    };\n\n    return (\n        <form>\n            <input onChange={inputTextHandler} type=\"text\" value={inputText} className=\"todo-input\" />\n            <button onClick={submitTodoHandler} type=\"submit\" className=\"todo-button\">\n                <i className=\"fas fa-plus-square\"></i>\n            </button>\n            <div className=\"select\">\n                <select onChange={statusChangeHandler} name=\"todos\" className=\"filter-todo\">\n                    <option value=\"all\">All</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"uncompleted\">Uncompleted</option>\n                </select>\n            </div>\n        </form>\n    );\n}\n\n\nexport default Form;","import './Todo.css';\n\nconst Todo = ({ todo, todos, setTodos }) => {\n    const deleteHandler = () => {\n        setTodos(todos.filter(cur => cur.id !== todo.id))\n    };\n\n    const completeHandler = () => {\n        setTodos(todos.map(cur => {\n            if (cur.id === todo.id) {\n                return { ...cur, completed: !cur.completed };\n            }\n            return cur;\n        }));\n    }\n\n    return (\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{todo.text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    );\n};\n\nexport default Todo;","import Todo from './Todo';\nimport './TodoList.css';\n\nconst TodoList = ({ todos, setTodos, status, filteredTodos }) => {\n    return (\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n                {filteredTodos.map(todo => (\n                    <Todo todos={todos} setTodos={setTodos} todo={todo} key={todo.id} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TodoList;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList'\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [status, todos]);\n\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos')) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    } else {\n      setTodos([]);\n    }\n  };\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => !todo.completed));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form setStatus={setStatus} inputText={inputText} setInputText={setInputText} todos={todos} setTodos={setTodos} />\n      <TodoList status={status} filteredTodos={filteredTodos} todos={todos} setTodos={setTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}